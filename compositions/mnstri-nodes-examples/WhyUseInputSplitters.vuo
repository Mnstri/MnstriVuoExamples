/**
* @file
* This composition does...
*
* @copyright Copyright Â© 2013 [mnstri](https://vuo.org/user/92)
* @see This is a Vuo Composition source code file.  See http://vuo.org for further information.
*/

digraph G
{
FirePeriodically [type="vuo.time.firePeriodically" version="1.0.0" label="Fire Periodically|<refresh>refresh\l|<seconds>seconds\l|<done>done\r|<fired>fired\r" pos="-324,163" _seconds="0.016700"];
InputSplitterReal [type="mnstri.utility.inputSplitter.real" version="1.0.0" label="Input Splitter (Real)|<refresh>refresh\l|<input>input\l|<done>done\r|<output>output\r" pos="-103,183" fillcolor="magenta" _input="0.500000"];
Make3DPoint [type="vuo.point.make.3d" version="1.0.0" label="Make 3D Point|<refresh>refresh\l|<x>x\l|<y>y\l|<z>z\l|<done>done\r|<point>point\r" pos="136,175"];
MakeCube [type="vuo.scene.make.cube" version="1.0.0" label="Make Cube|<refresh>refresh\l|<transform>transform\l|<frontShader>frontShader\l|<leftShader>leftShader\l|<rightShader>rightShader\l|<backShader>backShader\l|<topShader>topShader\l|<bottomShader>bottomShader\l|<done>done\r|<cube>cube\r" pos="561,145" _frontShader="" _leftShader="" _rightShader="" _backShader="" _topShader="" _bottomShader=""];
MakeList2 [type="vuo.list.make.1.VuoSceneObject" version="1.0.0" label="Make List|<refresh>refresh\l|<item1>item1\l|<done>done\r|<list>list\r" pos="712,156"];
MakeTransform [type="vuo.transform.make" version="1.0.0" label="Make Transform|<refresh>refresh\l|<translation>translation\l|<rotation>rotation\l|<scale>scale\l|<done>done\r|<transform>transform\r" pos="364,145" _translation="{\"x\":0,\"y\":0,\"z\":0}" _rotation="{\"x\":0,\"y\":0,\"z\":0}"];
RenderSceneToWindow [type="vuo.scene.render.window" version="1.0.0" label="Render Scene to Window|<refresh>refresh\l|<objects>objects\l|<done>done\r|<requestedFrame>requestedFrame\r|<movedMouseTo>movedMouseTo\r|<scrolledMouse>scrolledMouse\r|<usedMouseButton>usedMouseButton\r" pos="776,145"];





FirePeriodically:fired -> InputSplitterReal:refresh;
InputSplitterReal:output -> Make3DPoint:x;
InputSplitterReal:output -> Make3DPoint:y;
InputSplitterReal:output -> Make3DPoint:z;
Make3DPoint:point -> MakeTransform:scale;
MakeCube:cube -> MakeList2:item1;
MakeList2:list -> RenderSceneToWindow:objects;
MakeTransform:transform -> MakeCube:transform;
}
